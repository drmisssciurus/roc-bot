from telegram import BotCommand
from telegram import Update
from telegram.ext import Application, CallbackContext, CommandHandler, ConversationHandler, MessageHandler, filters, CallbackQueryHandler
from config import BOT_TOKEN
from conversation import (
	start,
	handle_role_selection,
	get_master_select,
	get_game_name_from_master,
	get_players_count_from_master,
	get_system_from_master,
	get_setting_from_master,
	get_game_type_from_master,
	get_time_from_master,
	get_cost_from_master,
	get_experience_from_master,
	get_image_from_master,
	get_free_text_from_master,
	handle_player_selection,
	get_player_name,
	get_contact_from_player,
	get_game_type_from_player,
	get_system_from_player,
	get_time_from_player,
	get_price_from_player,
	get_free_text_from_player,
	get_player_selection,
	get_search_type,
	get_search_system,
	get_search_price,
	cancel,
	show_master_application,
	show_master_editing_options,
	handle_master_editing_option,
	get_new_value_from_master,
	exit_editing_loop,
	delete_game, print_all_games, back_to_search_conversation
)

from states import *
from dotenv import load_dotenv


load_dotenv()
#dddtest
async def set_bot_commands(application: Application) -> None:
	"""–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã."""
	commands = [
		BotCommand("start", "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
		BotCommand("help", "–ü–æ–º–æ—â—å"),
		BotCommand("faq", "–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã"),
		BotCommand("cancel", "–û—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è"),
	]
	await application.bot.set_my_commands(commands)


#help
async def help_command(update: Update, context: CallbackContext) -> None:
    help_text = (
        "üìå –í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n\n"
        "/start ‚Äî –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –≤—ã–±—Ä–∞—Ç—å, –≤—ã –º–∞—Å—Ç–µ—Ä –∏–ª–∏ –∏–≥—Ä–æ–∫\n"
        "/help ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "/cancel ‚Äî –û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ\n\n"
        "üîπ –ú–∞—Å—Ç–µ—Ä–∞ –º–æ–≥—É—Ç —Å–æ–∑–¥–∞—Ç—å –∞–Ω–æ–Ω—Å —Å–≤–æ–µ–π –∏–≥—Ä—ã.\n"
        "üîπ –ò–≥—Ä–æ–∫–∏ –º–æ–≥—É—Ç –Ω–∞–π—Ç–∏ –∏–≥—Ä—É –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É.\n"
        "–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã ‚Äî –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å!"
    )
    await update.message.reply_text(help_text)

async def faq_command(update: Update, context: CallbackContext) -> None:
	faq_text = (
		"üèóÔ∏è *–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –¥–æ–ø–æ–ª–Ω—è–µ—Ç—Å—è.* –û–±—Ä–∞—â–∞–π—Ç–µ—Å—å —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–≥—Ä –∫–æ –õ—å–≤—É @dadjezz, "
		"–∞ –ø–æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞ —Å–ø—Ä–∞—à–∏–≤–∞–π—Ç–µ –ò–≥–æ—Ä—è @igor\\_krivic."
	)
	await update.message.reply_text(faq_text, parse_mode="Markdown")

application = Application.builder().token(BOT_TOKEN).build()

# Installation persistent buttons

application.bot_data["on_startup"] = lambda: application.loop.create_task(set_bot_commands(application))

# Main conversation
conv_handler = ConversationHandler(
	entry_points=[CommandHandler('start', start)],
	states={
		initial_state: [CallbackQueryHandler(handle_role_selection, pattern="^(master|player)$")],
		master_selection: [
			CallbackQueryHandler(get_master_select, pattern="^(master_applications|new_master_application|players_applications)$")], # back_to_role_selection

		# Game Editing Flow
		game_editing: [CallbackQueryHandler(show_master_application, pattern="^game")],
		editing_iteration_start: [CallbackQueryHandler(show_master_editing_options, pattern="^edit_game$"), CallbackQueryHandler(exit_editing_loop, pattern="^cancel_edit_game$"), CallbackQueryHandler(delete_game, pattern="^delete_game$")],
		editing_iteration_input: [CallbackQueryHandler(handle_master_editing_option, pattern="^(master_id|game_name|players_count|system|setting|game_type|game_time|cost|experience|image_url|free_text|)$")],
		editing_iteration_finish: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_new_value_from_master)],

		# New Application Flow
		master_input_game_name: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_game_name_from_master)],
		master_input_players_count: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_players_count_from_master)],
		master_input_system: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_system_from_master)],
		master_input_setting: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_setting_from_master)],
		master_input_game_type: [CallbackQueryHandler(get_game_type_from_master, pattern="^(–í–∞–Ω—à–æ—Ç|–ö–∞–º–ø–∞–Ω–∏—è|–ú–æ–¥—É–ª—å)$")],
		master_input_time: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_time_from_master)],
		master_input_cost: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_cost_from_master)],
		master_input_experience: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_experience_from_master)],
		master_input_image: [MessageHandler(filters.PHOTO, get_image_from_master)],
		master_input_free_text: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_free_text_from_master)],

		# Player
		player_selection: [CallbackQueryHandler(handle_player_selection, pattern="^(search|application|back_to_role_selection)$")],

		player_name_input: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_player_name)],
		player_contact_input: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_contact_from_player)],
		player_game_type_input: [CallbackQueryHandler(get_game_type_from_player, pattern="^(–í–∞–Ω—à–æ—Ç|–ö–∞–º–ø–∞–Ω–∏—è|–ú–æ–¥—É–ª—å)$")],
		players_system_input: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_system_from_player)],
		player_time_input: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_time_from_player)],
		player_price_input: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_price_from_player)],
		player_free_text_input: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_free_text_from_player)],

		player_search: [
			CallbackQueryHandler(get_player_selection, pattern="^(–ü–æ–∫–∞–∂–∏ –º–Ω–µ –≤—Å–µ –∏–≥—Ä—ã|–Ø —Ö–æ—á—É –≤—ã–±—Ä–∞—Ç—å –ø–æ —Ñ–∏–ª—å—Ç—Ä—É|back_to_search_conversation)$")],
		search_print_all_games: [CallbackQueryHandler(print_all_games, pattern="^game-.*")],
		search_type_input: [CallbackQueryHandler(get_search_type, pattern="^(–í–∞–Ω—à–æ—Ç|–ö–∞–º–ø–∞–Ω–∏—è|–ú–æ–¥—É–ª—å)$")],
		search_system_input: [CallbackQueryHandler(get_search_system, pattern="^system-.*")],
		search_price_input: [CallbackQueryHandler(get_search_price, pattern="^cost-.*")],
	},
	fallbacks=[
		CommandHandler('cancel', cancel), CallbackQueryHandler(cancel, pattern="^cancel$"),
		CallbackQueryHandler(start, pattern="^start_again"),
		CallbackQueryHandler(back_to_search_conversation, pattern="^back_to_search_conversation$"),
		CommandHandler("start", start)
	],
	conversation_timeout=43200
	#CallbackQueryHandler(go_back_to_role_selection, pattern="^back_to_role_selection$")
)
application.add_handler(conv_handler)
application.add_handler(CommandHandler("help", help_command))
application.add_handler(CommandHandler("faq", faq_command))
application.run_polling()
